// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import {Test, console} from "forge-std/Test.sol";
import "../src/CoinFlip.sol";
import "../src/CoinFlipExploit.sol";

contract CoinFlipExploitTest is Test {
    CoinFlip public coinFlip;
    CoinFlipExploit public exploit;

    function setUp() public {
        // Deploy the CoinFlip contract
        coinFlip = new CoinFlip();

        // Deploy the attacker contract, passing the address of CoinFlip
        exploit = new CoinFlipExploit(address(coinFlip));
    }

    function testExploit() public {
        // Execute the attack 10 times
        for (uint256 i = 0; i < 10; i++) {
            exploit.predictAndFlip();
            vm.roll(block.number + 1);
        }

        // Assert that we have reached 10 consecutive wins
        assertEq(coinFlip.consecutiveWins(), 10);
    }
}
